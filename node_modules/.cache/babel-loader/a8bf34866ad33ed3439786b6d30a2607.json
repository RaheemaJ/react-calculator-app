{"ast":null,"code":"var _jsxFileName = \"/Users/raheemajannah/Documents/Traineeship/Full Stack Engineer/Projects/react-calculator-app/calculator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react'; //need to do all the operator buttons,\n//remember after the equals sign has been pressed you want to be able to update the previous calculation\n//also want to try adding % and +/-\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentCalculation, setCurrentCalculation] = useState(\"\");\n  const [previousCalculation, setPreviousCalculation] = useState(\"\");\n  const operators = ['-', '+', '÷', '×'];\n  let expression = \"\";\n  /*\n  code functionality idea for +/- button\n  const changeSign = () => {\n      parseInt(currentCalculation) < 0 ? setCurrentCalculation(-Math.abs(currentCalculation)) : setCurrentCalculation(Math.abs(currentCalculation))\n  }*/\n\n  const addDigits = newDigit => {\n    if (currentCalculation === 0) {\n      setCurrentCalculation(newDigit);\n    } else if (currentCalculation.includes('.') && newDigit === '.') {\n      return;\n    } else {\n      setCurrentCalculation(currentCalculation + newDigit);\n    }\n  };\n\n  const clear = () => {\n    setCurrentCalculation(0);\n    setPreviousCalculation(0);\n  };\n\n  const deleteLastDigit = () => {\n    setCurrentCalculation(currentCalculation.slice(0, -1));\n  };\n  /*this checks if the new digit entered is an operatio and if it is, \n  puts the old digit and the operator into the previousCalculation \n  and then zeros the current calc\n  */\n\n\n  const addOperator = newDigit => {\n    if (operators.includes(newDigit)) {\n      setPreviousCalculation(currentCalculation.concat(newDigit));\n      setCurrentCalculation(\"\"); //find a way to make this show as nothing and not a 0\n    }\n  };\n  /*this sets the previous calcuation to our full expression*/\n\n\n  const onEquals = () => {\n    expression = previousCalculation.concat(currentCalculation);\n\n    if (expression.includes('÷')) {\n      setCurrentpreviousCalculation.deleteLastDigit() / currentCalculation;\n    }\n\n    setPreviousCalculation(expression);\n    setCurrentCalculation(calculation.eval());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outputPanel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previousCalculation\",\n        children: previousCalculation || null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currentCalculation\",\n        children: currentCalculation || \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"largerButtons\",\n      onClick: () => clear(),\n      children: \"AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteLastDigit(),\n      children: \"DEL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addOperator('÷'),\n      className: \"operators\",\n      children: \"\\xF7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addDigits('7'),\n      children: \"7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addDigits('8'),\n      children: \"8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addDigits('9'),\n      children: \"9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addOperator('×'),\n      className: \"operators\",\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addDigits('4'),\n      children: \"4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addDigits('5'),\n      children: \"5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addDigits('6'),\n      children: \"6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addOperator('-'),\n      className: \"operators\",\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addDigits('1'),\n      children: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addDigits('2'),\n      children: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addDigits('3'),\n      children: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addOperator('+'),\n      className: \"operators\",\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"largerButtons\",\n      onClick: () => addDigits('0'),\n      children: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addDigits('.'),\n      children: \".\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onEquals(),\n      className: \"operators\",\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"Vg8Iqa/1SGH8wTE2QjnP6ibU97I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","currentCalculation","setCurrentCalculation","previousCalculation","setPreviousCalculation","operators","expression","addDigits","newDigit","includes","clear","deleteLastDigit","slice","addOperator","concat","onEquals","setCurrentpreviousCalculation","calculation","eval"],"sources":["/Users/raheemajannah/Documents/Traineeship/Full Stack Engineer/Projects/react-calculator-app/calculator/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\n//need to do all the operator buttons,\n//remember after the equals sign has been pressed you want to be able to update the previous calculation\n//also want to try adding % and +/-\nfunction App(){\n    const[currentCalculation, setCurrentCalculation] = useState(\"\")\n    const[previousCalculation, setPreviousCalculation] = useState(\"\")\n    const operators = ['-', '+', '÷', '×'];\n    let expression = \"\";\n  \n    /*\n    code functionality idea for +/- button\n    const changeSign = () => {\n        parseInt(currentCalculation) < 0 ? setCurrentCalculation(-Math.abs(currentCalculation)) : setCurrentCalculation(Math.abs(currentCalculation))\n    }*/\n    \n    const addDigits = (newDigit) => {\n        if(currentCalculation === 0){\n            setCurrentCalculation(newDigit);\n        }\n        else if(currentCalculation.includes('.') && newDigit==='.'){\n            return;\n        }\n        else\n        {\n            setCurrentCalculation(currentCalculation + newDigit);\n        }\n    }\n\n    const clear = () => {\n        setCurrentCalculation(0);\n        setPreviousCalculation(0);\n    }\n\n    const deleteLastDigit = () => {\n        setCurrentCalculation(currentCalculation.slice(0, -1))\n    }\n    /*this checks if the new digit entered is an operatio and if it is, \n    puts the old digit and the operator into the previousCalculation \n    and then zeros the current calc\n    */\n    const addOperator = (newDigit) => {\n        if (operators.includes(newDigit)) {\n            setPreviousCalculation(currentCalculation.concat(newDigit));\n            setCurrentCalculation(\"\"); //find a way to make this show as nothing and not a 0\n        }\n    }\n    /*this sets the previous calcuation to our full expression*/\n    const onEquals = () => {\n        expression = previousCalculation.concat(currentCalculation);\n        if(expression.includes('÷')){\n            setCurrentpreviousCalculation.deleteLastDigit()/currentCalculation\n        }\n        setPreviousCalculation(expression);\n        setCurrentCalculation(calculation.eval());\n    }\n    \n\n    return (\n        <div className=\"calculator\"> \n            <div className=\"outputPanel\">\n                <div className=\"previousCalculation\">{previousCalculation || null}</div>\n                <div className=\"currentCalculation\">{currentCalculation || \"0\"}</div> \n            </div>\n            <button className=\"largerButtons\" onClick={() => clear()}>AC</button>\n            <button onClick={() => deleteLastDigit()}>DEL</button>\n            <button onClick={() => addOperator('÷')} className=\"operators\">÷</button>\n            <button onClick={() => addDigits('7')}>7</button>\n            <button onClick={() => addDigits('8')}>8</button>\n            <button onClick={() => addDigits('9')}>9</button>\n            <button onClick={() => addOperator('×')} className=\"operators\">×</button>\n            <button onClick={() => addDigits('4')}>4</button>\n            <button onClick={() => addDigits('5')}>5</button>\n            <button onClick={() => addDigits('6')}>6</button>\n            <button onClick={() => addOperator('-')} className=\"operators\">-</button>\n            <button onClick={() => addDigits('1')}>1</button>\n            <button onClick={() => addDigits('2')}>2</button>\n            <button onClick={() => addDigits('3')}>3</button>\n            <button onClick={() => addOperator('+')} className=\"operators\">+</button>\n            <button className=\"largerButtons\" onClick={() => addDigits('0')}>0</button>\n            <button onClick={() => addDigits('.')}>.</button>\n            <button onClick={() => onEquals()} className=\"operators\">=</button>\n        </div>\n    )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}