{"ast":null,"code":"var _jsxFileName = \"/Users/raheemajannah/Documents/Traineeship/Full Stack Engineer/Projects/react-calculator-app/calculator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useReducer } from 'react';\nimport DigitButton from './Components/DigitButtons.js'; //code for the actual app\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [{\n    currentValue,\n    previousValue,\n    operation\n  }, dispatch] = useReducer(reducer, {}); //usereducer was passed a reducer function and an initial state, and its returned our state and dispatch function \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculatorGrid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outputBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previousValue\",\n        children: [previousValue, \" \", operation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currentValue\",\n        children: currentValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"largerButtons\",\n      children: \"AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"DEL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"operators\",\n      children: \"\\xF7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"7\",\n      dispatch: dispatch,\n      children: \"7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"8\",\n      dispatch: dispatch,\n      children: \"8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"9\",\n      dispatch: dispatch,\n      children: \"9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"operators\",\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"4\",\n      dispatch: dispatch,\n      children: \"4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"5\",\n      dispatch: dispatch,\n      children: \"5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"6\",\n      dispatch: dispatch,\n      children: \"6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"operators\",\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"1\",\n      dispatch: dispatch,\n      children: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"2\",\n      dispatch: dispatch,\n      children: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"3\",\n      dispatch: dispatch,\n      children: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"operators\",\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      className: \"largerButtons\",\n      digit: 0,\n      children: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \".\",\n      dispatch: dispatch,\n      children: \".\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"operators\",\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n} //all the redux and react code\n//all the actions\n\n\n_s(App, \"nJCAXlX5njcu+VA+LaF4aOaNkBU=\");\n\n_c = App;\nexport const ACTIONS = {\n  ADD_DIGIT: 'addDigit',\n  //this is used to add a digit to the screen\n  ADD_OPERATOR: 'addOperator',\n  //this is used to add an operator to the screen\n  CLEAR_ACTION: 'clearAction',\n  DELETE_ACTION: 'deleteAction',\n  EQUALS_ACTION: 'equalsAction'\n};\n\nfunction reducer(state, _ref) {\n  let {\n    type,\n    payload\n  } = _ref;\n\n  //this reducer takes in action fucntion, but instead of writing the actions seperately we've just decided to do it within the reducer\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      return { ...state,\n        //returns the previous state and chnages the current value to add the new digit on the end\n        currentValue: `${currentValue || \"\"}${payload.digit}` //if the current operand is empty then we set it to an empty string and just add the digit t the end\n\n      };\n  }\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useReducer","DigitButton","App","currentValue","previousValue","operation","dispatch","reducer","ACTIONS","ADD_DIGIT","ADD_OPERATOR","CLEAR_ACTION","DELETE_ACTION","EQUALS_ACTION","state","type","payload","digit"],"sources":["/Users/raheemajannah/Documents/Traineeship/Full Stack Engineer/Projects/react-calculator-app/calculator/src/App.js"],"sourcesContent":["import './App.css';\nimport { useReducer } from 'react';\nimport DigitButton from './Components/DigitButtons.js';\n\n\n//code for the actual app\nfunction App(){\n    const [{ currentValue, previousValue, operation }, dispatch] = useReducer(reducer, {}) //usereducer was passed a reducer function and an initial state, and its returned our state and dispatch function \n    return (\n        <div className=\"calculatorGrid\"> \n            <div className=\"outputBox\">\n                <div className=\"previousValue\">{previousValue} {operation}</div>\n                <div className=\"currentValue\">{currentValue}</div>\n            </div>\n            <button className=\"largerButtons\">AC</button>\n            <button>DEL</button>\n            <button className=\"operators\">รท</button>\n            <DigitButton digit=\"7\" dispatch={dispatch}>7</DigitButton>\n            <DigitButton digit=\"8\" dispatch={dispatch}>8</DigitButton>\n            <DigitButton digit=\"9\" dispatch={dispatch}>9</DigitButton>\n            <button className=\"operators\">ร</button>\n            <DigitButton digit=\"4\" dispatch={dispatch}>4</DigitButton>\n            <DigitButton digit=\"5\" dispatch={dispatch}>5</DigitButton>\n            <DigitButton digit=\"6\" dispatch={dispatch}>6</DigitButton>\n            <button className=\"operators\">-</button>\n            <DigitButton digit=\"1\" dispatch={dispatch}>1</DigitButton>\n            <DigitButton digit=\"2\" dispatch={dispatch}>2</DigitButton>\n            <DigitButton digit=\"3\" dispatch={dispatch}>3</DigitButton>\n            <button className=\"operators\">+</button>\n            <DigitButton className=\"largerButtons\" digit={0}>0</DigitButton>\n            <DigitButton digit=\".\" dispatch={dispatch}>.</DigitButton>\n            <button className=\"operators\">=</button>\n        \n        </div>\n    )\n}\n//all the redux and react code\n\n//all the actions\nexport const ACTIONS = {\n    ADD_DIGIT: 'addDigit', //this is used to add a digit to the screen\n    ADD_OPERATOR: 'addOperator', //this is used to add an operator to the screen\n    CLEAR_ACTION: 'clearAction',\n    DELETE_ACTION: 'deleteAction',\n    EQUALS_ACTION: 'equalsAction'\n}\nfunction reducer(state, {type, payload}){ //this reducer takes in action fucntion, but instead of writing the actions seperately we've just decided to do it within the reducer\n    switch(type){\n        case ACTIONS.ADD_DIGIT:\n            return {\n                ...state, //returns the previous state and chnages the current value to add the new digit on the end\n                currentValue: `${currentValue || \"\"}${payload.digit}` //if the current operand is empty then we set it to an empty string and just add the digit t the end\n        }\n    }\n}\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}