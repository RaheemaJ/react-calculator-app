{"ast":null,"code":"var _jsxFileName = \"/Users/raheemajannah/Documents/Traineeship/Full Stack Engineer/Projects/react-calculator-app/calculator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react'; //need to do all the operator buttons,\n//remember after the equals sign has been pressed you want to be able to update the previous calculation\n//also want to try adding % and +/-\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentCalculation, setCurrentCalculation] = useState(\"\");\n  const [previousCalculation, setPreviousCalculation] = useState(\"\");\n  const expression = \"\";\n  /*\n  code functionality idea for +/- button\n  const changeSign = () => {\n      parseInt(currentCalculation) < 0 ? setCurrentCalculation(-Math.abs(currentCalculation)) : setCurrentCalculation(Math.abs(currentCalculation))\n  }*/\n\n  const AddDigits = newDigit => {\n    if (currentCalculation === 0) {\n      setCurrentCalculation(newDigit);\n    } else if (currentCalculation.includes('.') && newDigit === '.') {\n      return;\n    } else if (newDigit === ('÷' || '×' || '+' || '-')) {\n      return;\n    } else {\n      setCurrentCalculation(currentCalculation + newDigit);\n    }\n  };\n\n  const clear = () => {\n    setCurrentCalculation(0);\n  };\n\n  const deleteLastDigit = () => {\n    setCurrentCalculation(currentCalculation.slice(0, -1));\n  };\n\n  const addOperator = operator => {\n    expression = `${currentCalculation}${operator}`;\n    clear();\n  };\n\n  const evaluate = () => {\n    setCurrentCalculation(expression.eval());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outputPanel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previousCalculation\",\n        children: previousCalculation || null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currentCalculation\",\n        children: currentCalculation || \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"largerButtons\",\n      onClick: () => clear(),\n      children: \"AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteLastDigit(),\n      children: \"DEL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addOperator('÷'),\n      className: \"operators\",\n      children: \"\\xF7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => AddDigits('7'),\n      children: \"7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => AddDigits('8'),\n      children: \"8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => AddDigits('9'),\n      children: \"9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addOperator('×'),\n      className: \"operators\",\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => AddDigits('4'),\n      children: \"4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => AddDigits('5'),\n      children: \"5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => AddDigits('6'),\n      children: \"6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addOperator('-'),\n      className: \"operators\",\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => AddDigits('1'),\n      children: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => AddDigits('2'),\n      children: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => AddDigits('3'),\n      children: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addOperator('+'),\n      className: \"operators\",\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"largerButtons\",\n      onClick: () => AddDigits('0'),\n      children: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => AddDigits('.'),\n      children: \".\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"operators\",\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"Vg8Iqa/1SGH8wTE2QjnP6ibU97I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","currentCalculation","setCurrentCalculation","previousCalculation","setPreviousCalculation","expression","AddDigits","newDigit","includes","clear","deleteLastDigit","slice","addOperator","operator","evaluate","eval"],"sources":["/Users/raheemajannah/Documents/Traineeship/Full Stack Engineer/Projects/react-calculator-app/calculator/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\n//need to do all the operator buttons,\n//remember after the equals sign has been pressed you want to be able to update the previous calculation\n//also want to try adding % and +/-\nfunction App(){\n    const[currentCalculation, setCurrentCalculation] = useState(\"\")\n    const[previousCalculation, setPreviousCalculation] = useState(\"\")\n    const expression = \"\";\n  \n    /*\n    code functionality idea for +/- button\n    const changeSign = () => {\n        parseInt(currentCalculation) < 0 ? setCurrentCalculation(-Math.abs(currentCalculation)) : setCurrentCalculation(Math.abs(currentCalculation))\n    }*/\n    \n    const AddDigits = (newDigit) => {\n        if(currentCalculation === 0){\n            setCurrentCalculation(newDigit);\n        }\n        else if(currentCalculation.includes('.') && newDigit==='.'){\n            return;\n        }\n        else if(newDigit===('÷' || '×' || '+' || '-')){\n            return;\n        }\n        else\n        {\n            setCurrentCalculation(currentCalculation + newDigit);\n        }\n    }\n\n    const clear = () => {\n        setCurrentCalculation(0);\n    }\n\n    const deleteLastDigit = () => {\n        setCurrentCalculation(currentCalculation.slice(0, -1))\n    }\n\n    const addOperator = (operator) => {\n        expression = `${currentCalculation}${operator}`;\n        clear()\n    }\n\n    const evaluate = () => {\n        setCurrentCalculation(expression.eval())\n    }\n    \n\n    return (\n        <div className=\"calculator\"> \n            <div className=\"outputPanel\">\n                <div className=\"previousCalculation\">{previousCalculation || null}</div>\n                <div className=\"currentCalculation\">{currentCalculation || \"0\"}</div> \n            </div>\n            <button className=\"largerButtons\" onClick={() => clear()}>AC</button>\n            <button onClick={() => deleteLastDigit()}>DEL</button>\n            <button onClick={() => addOperator('÷')} className=\"operators\">÷</button>\n            <button onClick={() => AddDigits('7')}>7</button>\n            <button onClick={() => AddDigits('8')}>8</button>\n            <button onClick={() => AddDigits('9')}>9</button>\n            <button onClick={() => addOperator('×')} className=\"operators\">×</button>\n            <button onClick={() => AddDigits('4')}>4</button>\n            <button onClick={() => AddDigits('5')}>5</button>\n            <button onClick={() => AddDigits('6')}>6</button>\n            <button onClick={() => addOperator('-')} className=\"operators\">-</button>\n            <button onClick={() => AddDigits('1')}>1</button>\n            <button onClick={() => AddDigits('2')}>2</button>\n            <button onClick={() => AddDigits('3')}>3</button>\n            <button onClick={() => addOperator('+')} className=\"operators\">+</button>\n            <button className=\"largerButtons\" onClick={() => AddDigits('0')}>0</button>\n            <button onClick={() => AddDigits('.')}>.</button>\n            <button className=\"operators\">=</button>\n        </div>\n    )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}